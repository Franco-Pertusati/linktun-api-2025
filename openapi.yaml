openapi: 3.0.3
info:
  title: LinkTun API
  description: API for LinkTun, a URL shortener service with user authentication and link expiration.
  version: 1.0.0
  contact:
    name: API Support
    email: support@linktun.com
servers:
  - url: http://localhost:3000
    description: Local development server
tags:
  - name: Authentication
    description: Endpoints for user registration and login
  - name: Links
    description: Endpoints for creating, retrieving, and managing short links
components:
  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: acces_token
  schemas:
    RegisterResponse:
      type: object
      properties:
        username:
          type: string
          example: johndoe
        message:
          type: string
          example: User successfully registered. Token stored in cookies.

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: johndoe@example.com
        password:
          type: string
          format: password
          example: StrongPass123!

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: johndoe@example.com
        password:
          type: string
          format: password
          example: StrongPass123!
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: An error occurred
          
    LinkRequest:
      type: object
      required:
        - originalUrl
      properties:
        originalUrl:
          type: string
          format: uri
          example: https://example.com
        expiresAt:
          type: string
          format: date-time
          example: 2025-08-12T12:00:00Z
    LinkResponse:
      type: object
      properties:
        id:
          type: integer
          example: 123
        originalUrl:
          type: string
          format: uri
          example: https://example.com
        shortUrl:
          type: string
          format: uri
          example: http://linktun.com/abc123
        favIcon:
          type: string
          format: uri
          example: https://example.com/favicon.ico
        createdAt:
          type: string
          format: date-time
          example: 2025-08-12T11:00:00Z
        expiresAt:
          type: string
          format: date-time
          example: 2025-08-12T12:00:00Z
paths:
  /{shortCode}:
    get:
      tags:
        - Links
      summary: Redirect to original URL using short code
      parameters:
        - in: path
          name: shortCode
          schema:
            type: string
          required: true
          description: The short code for redirection
      responses:
        "302":
          description: Redirect to original URL
        "404":
          description: Link not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "410":
          description: Link expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Bad request - Invalid input or missing fields
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - Email already registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate a user and return a JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/verify:
    get:
      tags:
        - Authentication
      summary: Verify authentication using token in cookies
      description: Validates the JWT token stored in cookies and returns success if valid.
      responses:
        "200":
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Token is valid
        "401":
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /links:
    post:
      tags:
        - Links
      summary: Create a new short link
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkRequest"
      responses:
        "201":
          description: Short link created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkResponse"
        "400":
          description: Bad request - Invalid URL or data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - User not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - Links
      summary: Get all links for the authenticated user
      responses:
        "200":
          description: List of user's short links
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LinkResponse"
        "401":
          description: Unauthorized - User not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Links
      summary: Delete a short link by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The short link ID
      responses:
        "204":
          description: Link successfully deleted
        "401":
          description: Unauthorized - User not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Link not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
